// ЗАНЯТИЕ 39 - ВСТРОЕННЫЕ ВОЗМОЖНОСТИ JS

// ЗАДАНИЕ 1 (презентация): Напишите функцию counterFactory(start, step), которая при вызове возвращает другую функцию – счётчик tictoc(). 
//                          start – стартовое значение счётчика, step – его шаг. При каждом вызове tictoc увеличивает значение счётчика на step.


// КОД ЗАДАНИЯ 1 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// function counterFactory(start, step) {
//     let counter = start;
//     const tictoc = function () {
//         counter += step;
//         return counter;
//     }
//     return tictoc;
// }

// let counter1 = counterFactory(0, 3);
// let counter2 = counterFactory(10, 5);
// console.log(counter1());
// console.log(counter1());
// console.log(counter1());
// console.log(counter2());
// console.log(counter2());
// console.log(counter2());


// КОНЕЦ КОДА ЗАДАНИЯ 1 -------------------------------------------------------------------------------------------------------------------------------------------------

// ЗАДАНИЕ 2 (презентация): Напишите функцию take(tictoc, x), которая вызывает функцию tictoc заданное число (x) раз и возвращает массив с результатами вызовов.

// КОД ЗАДАНИЯ 2 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// function counterFactory(start, step) {
//     let counter = start;
//     const tictoc = function () {
//         counter += step;
//         return counter;
//     }
//     return tictoc;
// }

// function take(tictoc, x) {
//     let result = [];
//     for (let i = 0; i < x; i++) {
//         result.push(tictoc());
//     }
//     return result;
// }

// console.log(take(counterFactory(0, 3), 3));
// console.log(take(counterFactory(10, 5), 10));


// КОНЕЦ КОДА ЗАДАНИЯ 2 -------------------------------------------------------------------------------------------------------------------------------------------------

// ЗАДАНИЕ 3 (презентация): Разбейте текст этой задачи на отдельные слова, удаляя по пути точки и запятые, а полученные слова сложите в массив.
//                          Напишите функцию, которая возвращает массив из тех же слов, но развёрнутых задом наперёд,
//                          причём массив должен быть отсортирован по количеству букв в слове. Напишите другую функцию,
//                          которая считает общее количество букв с во всех элементах массива.


// КОД ЗАДАНИЯ 3 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let string = "Разбейте текст этой задачи на отдельные слова, удаляя по пути точки и запятые, а полученные слова сложите в массив. Напишите функцию, которая возвращает массив из тех же слов, но развёрнутых задом наперёд, причём массив должен быть отсортирован по количеству букв в слове. Напишите другую функцию, которая считает общее количество букв с во всех элементах массива.";

// function stringSeparator(string) {
//     const result = string.replaceAll('.', '').replaceAll(',', '').split(' ');
//     return result;
// }

// function inReverse() {
//     let arr = stringSeparator(string);
//     arr.forEach(function (el, idx, arr) {
//         arr[idx] = el.split('').reverse().join('');
//     })
//     arr.sort((a, b) => a.length - b.length).reverse();
//     return arr;
// }

// console.log(inReverse())

// function countLetter(letter) {
//     let arr = stringSeparator(string);
//     let result = arr.reduce(function (counter, el) {
//         for (let i = 0; i < el.length; i++) {
//             if (el[i] == letter) {
//                 counter++;
//             }
//         }
//         return counter;
//     }, 0)

//     return result;
// }

// console.log(countLetter('с'));

// ЭТО ПРОСТО СЛОВАРЬ ИСХОДНОЙ СТРОКИ ДЛЯ ПРОВЕРКИ

// let obj = {};
// for (let i = 0; i < string.length; i++) {
//     if (string[i] in obj) {
//         obj[string[i]] += 1;
//     } else { obj[string[i]] = 1 };
// }

// console.log(obj);

// КОНЕЦ КОДА ЗАДАНИЯ 3 -------------------------------------------------------------------------------------------------------------------------------------------------

// ЗАДАНИЕ 4 (презентация): Дан код:
//                          Добавьте в последнюю строчку метод call() так, чтобы на экран вывелось 'Привет, Иванов Иван'.
//                          Слово 'привет' возьмите из свойства объекта obj, а 'Иванов' и 'Иван' задайте как параметры функциями.


// КОД ЗАДАНИЯ 4 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let obj = { greeting: "Привет" };
// function func(surname, name) {
//     alert(this.greeting + ', ' + surname + ' ' + name);
// }
// func.call(obj, "Иванов", "Иван");

// КОНЕЦ КОДА ЗАДАНИЯ 4 -------------------------------------------------------------------------------------------------------------------------------------------------

// ЗАДАНИЕ 5 (презентация): Перепишите задачу так, чтобы вместо call применялся apply.


// КОД ЗАДАНИЯ 5 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let obj = { greeting: "Привет" };
// let massiv = ["Петров", "Петр"]
// function func(surname, name) {
//     alert(this.greeting + ', ' + surname + ' ' + name);
// }
// func.apply(obj, massiv);

// КОНЕЦ КОДА ЗАДАНИЯ 5 -------------------------------------------------------------------------------------------------------------------------------------------------

// ЗАДАНИЕ 1 (домашка): Напишите функцию, которая принимает в качестве параметра номер символа в таблице Unicode.
//                      Подсчитайте количество таких символов во всех элементах массива, как в задаче 3 из первой части практики.

// КОД ЗАДАНИЯ 1 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let string = "Разбейте текст этой задачи на отдельные слова, удаляя по пути точки и запятые, а полученные слова сложите в массив. Напишите функцию, которая возвращает массив из тех же слов, но развёрнутых задом наперёд, причём массив должен быть отсортирован по количеству букв в слове. Напишите другую функцию, которая считает общее количество букв с во всех элементах массива.";

// function stringSeparator(string) {
//     const result = string.split(' ');
//     return result;
// }

// function countSymbol(symbolNumber) {
//     let arr = stringSeparator(string);
//     let result = arr.reduce(function (counter, el) {
//         for (let i = 0; i < el.length; i++) {
//             if (el[i] == String.fromCharCode(symbolNumber)) {
//                 counter++;
//             }
//         }
//         return counter;
//     }, 0)

//     return result;
// }

// console.log(countSymbol(1089));


// КОНЕЦ КОДА ЗАДАНИЯ 1 -------------------------------------------------------------------------------------------------------------------------------------------------

// ЗАДАНИЕ 2 (домашка): Напишите функцию, которая будет возвращать частичную функцию от функции из задачи 1, фиксируя искомый символ.

// КОД ЗАДАНИЯ 2 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let string = "Разбейте текст этой задачи на отдельные слова, удаляя по пути точки и запятые, а полученные слова сложите в массив. Напишите функцию, которая возвращает массив из тех же слов, но развёрнутых задом наперёд, причём массив должен быть отсортирован по количеству букв в слове. Напишите другую функцию, которая считает общее количество букв с во всех элементах массива.";

// function stringSeparator(string) {
// 	const result = string.split(' ');
// 	return result;
// }

// function countSymbolWrap(symbolNumber) {
// 	function countSymbol() {
// 		let arr = stringSeparator(string);
// 		let result = arr.reduce(function (counter, el) {
// 			for (let i = 0; i < el.length; i++) {
// 				if (el[i] == String.fromCharCode(symbolNumber)) {
// 					counter++;
// 				}
// 			}
// 			return counter;
// 		}, 0)

// 		return result;
// 	}
// 	return countSymbol;
// }

// let findC = countSymbolWrap(1089);
// let findP = countSymbolWrap(1088);

// console.log(findC());
// console.log(findP());


// КОНЕЦ КОДА ЗАДАНИЯ 2 -------------------------------------------------------------------------------------------------------------------------------------------------

// ЗАДАНИЕ 3 (домашка): Отфильтруйте массив городов так, чтобы в нём остались только города из штата Калифорния, которые с 2000 по 2013 выросли в населении.

// КОД ЗАДАНИЯ 3 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let californiaCities = cities.filter(function (el) {
// 	return ((el.state == "California") && (parseFloat(el.growth_from_2000_to_2013) > 0));
// })

// console.log(californiaCities);

// КОНЕЦ КОДА ЗАДАНИЯ 3 -------------------------------------------------------------------------------------------------------------------------------------------------

// ЗАДАНИЕ 4 (домашка): Подсчитайте, сколько миллионов населения живёт во всех городах на широте от 25 до 30 градусов.

// КОД ЗАДАНИЯ 4 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let populationCalculator = cities.reduce(function (counter, el) {
// 	if ((parseInt(el.latitude) > 25) && (parseInt(el.latitude) > 30))
// 		counter += parseInt(el.population);
// 	return counter
// }, 0)

// console.log(`Количество человек во всех городах Америки на широте от 25 до 30 градусов - ${populationCalculator / 10 ** 6} млн`);

// КОНЕЦ КОДА ЗАДАНИЯ 4 -------------------------------------------------------------------------------------------------------------------------------------------------

// ЗАДАНИЕ 5 (домашка): Создайте массив только из тех городов, которые начинаются на букву D, при этом отсортируйте элементы этого массива по названию города.

// КОД ЗАДАНИЯ 5 ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let сitiesThatStartWithD = cities.filter(function (el) {
// 	return (el.city[0] == "D");
// })

// let sortedCitiesThatStartWithD = сitiesThatStartWithD.sort((a, b) => {
// 	if (a.city < b.city) { return -1;}
// 	if (a.city > b.city) { return 1; }
// 	return 0;
// });

// console.log(сitiesThatStartWithD);
// console.log(sortedCitiesThatStartWithD);

// КОНЕЦ КОДА ЗАДАНИЯ 5 -------------------------------------------------------------------------------------------------------------------------------------------------


// ЗАДАНИЕ 6 (домашка): Преобразуйте представленный массив "Города" в объект "Штаты":
//                  * для каждого штата – отдельное свойство объекта (ключ = название штата);
//                  * значение каждого свойства – массив городов;
//                  * каждый элемент массива – название города, население и место в общем рейтинге (rank).


// КОД ЗАДАНИЯ 6 (Способ 1) ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let states = {};

// cities.forEach(function (el) {
// 	if (!(el.state in states)) {
// 		states[el.state] = [];
// 	}
// 	states[el.state].push([el.city, el.population, el.rank]);
// });

// console.log(states);


// КОНЕЦ КОДА ЗАДАНИЯ 6 (Способ 1) -------------------------------------------------------------------------------------------------------------------------------------------------

// КОД ЗАДАНИЯ 6 (Способ 2) ---------------------------------------------------------------------------------------------------------------------------------------------------------

// let result = cities.reduce((states, el) => {

// 	if (!(el.state in states)) {
// 		states[el.state] = [];
// 	}
// 	states[el.state].push([el.city, el.population, el.rank]);
// 	return states;

// }, {})

// console.log(result);

// КОНЕЦ КОДА ЗАДАНИЯ 6 (Способ 2) -------------------------------------------------------------------------------------------------------------------------------------------------

